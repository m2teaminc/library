apply plugin: 'com.android.library'
//apply plugin: 'kotlin-android'

ext {
    bintrayRepo = 'library'
    bintrayName = 'library'

    publishedGroupId = 'm2team'
    artifact = 'library'
    libraryName = 'library'
    libraryVersion = '1.0'
    libraryDescription = 'common lib java'

    siteUrl = 'https://bitbucket.org/hoangminh1190/m2team-lib/'
    gitUrl = 'https://hoangminh1190@bitbucket.org/hoangminh1190/m2team-lib.git'

    developerId = 'm2team'
    developerName = 'M2 Team'
    developerEmail = 'm2team.inc@email.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "http://www.jitpack.io" }
        maven { url "http://jcenter.bintray.com" }
        maven { url "https://maven.google.com" }
        maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://clojars.org/repo/" }
    }
}

ext {
    // Sdk and tools
    minSdkVersion = 17
    targetSdkVersion = 27
    compileSdkVersion = 27
    buildToolsVersion = '27.0.0'

    // App dependencies
    butterKnifeVersion = '8.6.0'
    calligraphyVersion = '2.2.0'
    debugDBVersion = '1.0.0'
    dagger2Version = '2.8'
    evenBusVersion = '3.0.0'
    facebookStethoVersion = '1.3.1'
    frescoVersion = '1.3.0'
    greenDaoVersion = '3.2.0'
    glideVersion = '3.7.0'
    googleServicesVersion = "10.2.4"
    googleMapUtilsVersion = '0.5+'
    gsonVersion = '2.8.0'
    icePickVersion = "3.2.0"
    iconifyVersion = "2.2.2"
    jodaTimeVersion = '2.9.4'
    jsoupVersion = '1.8.1'
    kotlin_version = '1.1.2-4'
    leakCanaryVersion = "1.5.1"
    loggerVersion = '2.1.1'
    materialEditTextVersion = '2.1.4'
    multidexVersion = '1.0.2'
    mosbyMvpVersion = '3.0.4'
    parcelableVersion = '1.1.6'
    placeholderviewVersion = '0.6.1'
    retrofitVersion = "2.1.0"
    roomDbVersion = "1.0.0-alpha4"
    rx2FastAndroidNetworking = '1.0.0'
    rxjava2Version = '2.0.6'
    rxandroidVersion = '2.0.1'
    supportLibraryVersion = '27.0.0'
    tastyToastVersion = '0.1.1'
    timberVersion = '4.5.1'
    thirtyinchVersion = '0.8.0'

    junitVersion = '4.12'
    espressoVersion = '2.2.2'
    mockitoVersion = '2.7.1'

}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "http://www.jitpack.io" }
    maven { url "http://jcenter.bintray.com" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://clojars.org/repo/" }
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        compileOptions.encoding = 'windows-1252'
        //multiDexEnabled true
        /*javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }*/
    }
    signingConfigs {
        release {
/*          storeFile file(System.getenv('ANDROID_KEYSTORE_PATH'))
            storePassword System.getenv('ANDROID_STORE_PASS')
            keyAlias System.getenv('ANDROID_KEY_ALIAS')
            keyPassword System.getenv('ANDROID_KEY_PASS')*/
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-icepick.pro'
            proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
            //signingConfig signingConfigs.release
        }
    }
    /*dexOptions {
        javaMaxHeapSize "4g"
    }*/
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
    }

    flavorDimensions "versionCode"
    /*dataBinding {
        enabled = true
    }*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*productFlavors {
        free {
            applicationId "com.m2team.myjourney.free"
            versionCode 2
            versionName '2.0'
        }
        pro {
            minSdkVersion 16
            applicationId 'com.m2team.myjourney.pro'
            targetSdkVersion 25
            versionCode 2
            versionName '2.0'
        }
    }*/
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Android support libraries
    compile "com.android.support:support-v4:$supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$supportLibraryVersion"
    //compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //Nine old android
    //compile 'com.nineoldandroids:library:2.4.0'

    //Kotlin
    //compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //ButterKnife
    /*compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"*/

    //Json parser
    compile "com.google.code.gson:gson:$gsonVersion"

    //Image loader
    compile "com.github.bumptech.glide:glide:$glideVersion"

    //Font
    compile "uk.co.chrisjenx:calligraphy:$calligraphyVersion"

    //Logger
    compile "com.jakewharton.timber:timber:$timberVersion"
    compile "com.orhanobut:logger:$loggerVersion"

    //Custom toast
    compile "com.sdsmdg.tastytoast:tastytoast:$tastyToastVersion"
    //compile 'com.github.GrenderG:Toasty:1.2.5'

    //Jsoup
    compile "org.jsoup:jsoup:$jsoupVersion"

    //Secure prefs
    compile 'com.scottyab:secure-preferences-lib:0.1.4'

    //SpongeCastle (adds Security algorithms)
    compile('com.madgag.spongycastle:core:1.54.0.0')
    compile('com.madgag.spongycastle:prov:1.54.0.0')

    //Joda time
    compile "joda-time:joda-time:$jodaTimeVersion"
    compile 'com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:1.6.0'

    //Eventbus
    compile "org.greenrobot:eventbus:$evenBusVersion"

    //Admob Adapter
    //compile 'com.github.clockbyte:admobadapter:1.4.1'

    //Mosby (MVP)
    /*compile "com.hannesdorfmann.mosby3:mvp:$mosbyMvpVersion" // Plain MVP
    compile "com.hannesdorfmann.mosby3:mvp-lce:$mosbyMvpVersion" // MVP + ViewState + LCE Views*/

    //Thirty inch (MVP Lib)
    /*compile "net.grandcentrix.thirtyinch:thirtyinch:$thirtyinchVersion"
    compile "net.grandcentrix.thirtyinch:thirtyinch-rx:$thirtyinchVersion"*/

    //Fabric
    /*compile('com.crashlytics.sdk.android:crashlytics:2.6.8') {
            transitive = true;
    }*/

    //Fresco
    //compile "com.facebook.fresco:fresco:$frescoVersion"

    //Firebase
    /*compile "com.google.firebase:firebase-messaging:$googleServicesVersion"
    compile "com.google.firebase:firebase-core:$googleServicesVersion"
    compile "com.google.firebase:firebase-config:$googleServicesVersion"
    compile "com.google.firebase:firebase-ads:$googleServicesVersion"
    compile "com.google.firebase:firebase-storage:$googleServicesVersion"*/

    // Google
    /*compile "com.google.maps.android:android-maps-utils:$googleMapUtilsVersion"
    compile "com.google.android.gms:play-services-ads:$googleServicesVersion"
    compile "com.google.android.gms:play-services-analytics:$googleServicesVersion"
    compile "com.google.android.gms:play-services-maps:$googleServicesVersion"
    compile "com.google.android.gms:play-services-location:$googleServicesVersion"
    compile "com.google.android.gms:play-services-places:$googleServicesVersion"
    */

    //Multidex
    //compile "com.android.support:multidex:$multidexVersion"

    //Retrofit
    /*compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'*/

    //Facebook Stetho for intercept network
    /*compile "com.facebook.stetho:stetho:$facebookStethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$facebookStethoVersion"*/

    //RX Android
    /*compile "io.reactivex.rxjava2:rxjava:$rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"*/

    //Dependency injection
    /*compile "com.google.dagger:dagger:$dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2Version"
    provided 'javax.annotation:jsr250-api:1.0'*/

    //Room ORM DB
    /*compile "android.arch.persistence.room:runtime:$roomDbVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomDbVersion"
    compile "android.arch.persistence.room:rxjava2:$roomDbVersion"*/

    //Leak canary
    /*debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"*/

    //Ice pick - saving and restoring BundleSaveInstance
    //compile "frankiesardo:icepick:$icePickVersion"
    //provided "frankiesardo:icepick-processor:$icePickVersion"

    //Parcelable - maybe conflict with Icepick, Auto-Parcel is alternative lib
    //compile "org.parceler:parceler-api:$parcelableVersion"
    //annotationProcessor "org.parceler:parceler:$parcelableVersion"

    //Auto Parcel
    //apt 'frankiesardo:auto-parcel:1.0.3'

    //Gesture detector
    //compile 'com.github.nisrulz:sensey:1.7.0'

    //Swipe view
    //compile "com.mindorks:placeholderview:$placeholderviewVersion"

    //Round, circle image view
    //compile 'com.makeramen:roundedimageview:2.3.0'

    //Material UI Kit
    //compile 'com.github.rey5137:material:1.2.2'

    //Bootstrap UI Kit
    //compile 'com.beardedhen:androidbootstrap:2.3.1'

    //Material EditText
    //compile "com.rengwuxian.materialedittext:library:$materialEditTextVersion"

    //Flower material drawer
    //compile 'com.mxn.soul:flowingdrawer-core:2.0.0'

    //Material navigation tab bar
    //compile 'devlight.io:navigationtabbar:1.2.5'

    //Date time picker
    //compile 'com.wdullaer:materialdatetimepicker:3.3.0'

    //Tag Group
    //compile 'me.gujun.android.taggroup:library:1.4@aar'

    //Icon
    /*compile "com.joanzapata.iconify:android-iconify-fontawesome:$iconifyVersion" // (v4.5)
    compile "com.joanzapata.iconify:android-iconify-entypo:$iconifyVersion" // (v3,2015)
    compile "com.joanzapata.iconify:android-iconify-typicons:$iconifyVersion" // (v2.0.7)
    compile "com.joanzapata.iconify:android-iconify-material:$iconifyVersion" // (v2.0.0)
    compile "com.joanzapata.iconify:android-iconify-material-community:$iconifyVersion" // (v1.4.57)
    compile "com.joanzapata.iconify:android-iconify-meteocons:$iconifyVersion" // (latest)
    compile "com.joanzapata.iconify:android-iconify-weathericons:$iconifyVersion" // (v2.0)
    compile "com.joanzapata.iconify:android-iconify-simplelineicons:$iconifyVersion" // (v1.0.0)
    compile "com.joanzapata.iconify:android-iconify-ionicons:$iconifyVersion" // (v2.0.1)*/

    //Dependencies for local unit tests
    /*testCompile "junit:junit:$ext.junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger2Version"*/

    //UI Testing
    /*androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger2Version"*/
}
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
//apply plugin: 'com.google.gms.google-services'

